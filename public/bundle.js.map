{
  "version": 3,
  "sources": ["../node_modules/preact/src/constants.js", "../node_modules/preact/src/util.js", "../node_modules/preact/src/options.js", "../node_modules/preact/src/create-element.js", "../node_modules/preact/src/component.js", "../node_modules/preact/src/create-context.js", "../node_modules/preact/src/diff/children.js", "../node_modules/preact/src/diff/props.js", "../node_modules/preact/src/diff/index.js", "../node_modules/preact/src/render.js", "../node_modules/preact/src/clone-element.js", "../node_modules/preact/src/diff/catch-error.js", "../node_modules/preact/jsx-runtime/src/utils.js", "../node_modules/preact/src/constants.js", "../node_modules/preact/jsx-runtime/src/index.js", "../src/pages/About.tsx", "../src/App.tsx", "../node_modules/preact-iso/src/router.js", "../node_modules/preact/hooks/src/index.js", "../node_modules/preact-iso/src/lazy.js", "../node_modules/preact-iso/src/hydrate.js"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tparentDom = component._parentDom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\tif (!newDom && oldVNode._dom == oldDom) {\n\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t}\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = Date.now();\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname !== 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tif (this._listeners) {\n\t\tconst eventHandler = this._listeners[e.type + false];\n\t\t/**\n\t\t * This trick is inspired by Vue https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/modules/events.ts#L90-L101\n\t\t * when the dom performs an event it leaves micro-ticks in between bubbling up which means that an event can trigger on a newly\n\t\t * created DOM-node while the event bubbles up, this can cause quirky behavior as seen in https://github.com/preactjs/preact/issues/3927\n\t\t */\n\t\tif (!e._dispatched) {\n\t\t\t// When an event has no _dispatched we know this is the first event-target in the chain\n\t\t\t// so we set the initial dispatched time.\n\t\t\te._dispatched = Date.now();\n\t\t\t// When the _dispatched is smaller than the time when the targetted event handler was attached\n\t\t\t// we know we have bubbled up to an element that was added during patching the dom.\n\t\t} else if (e._dispatched <= eventHandler._attached) {\n\t\t\treturn;\n\t\t}\n\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxyCapture(e) {\n\tif (this._listeners) {\n\t\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n\t}\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + str + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities(value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "import { h } from 'preact';\nexport default function About() {\n  return <>\n    About\n  </>;\n}\n", "'use strict';\n\nimport { h, render } from 'preact';\nimport { ErrorBoundary, lazy, Router, Route } from 'preact-iso';\nimport { useState } from 'preact/hooks';\nimport * as stylex from '@stylexjs/stylex';\nimport { colors } from '@stylexjs/open-props/lib/colors.stylex';\nimport { sizes } from '@stylexjs/open-props/lib/sizes.stylex';\nimport { fonts } from '@stylexjs/open-props/lib/fonts.stylex';\nimport { color } from './stylex/color.stylex';\nimport { lightTheme, darkTheme, autoTheme } from './stylex/theme.stylex';\nimport { helloworld, demo } from './testtsc';\nconst calc = (x: number, y: number): number => {\n  return x + y;\n};\n\n// const Home = lazy(() => import('./pages/Home'));\nfunction Home() {\n  return <>\n    Home\n  </>;\n}\nconst About = lazy(() => import('./pages/About'));\nfunction App() {\n  const [isLightTheme, setIsLightTheme] = useState(true);\n  return (\n    // <div {...stylex.props(styles.main)}>\n    //   <div {...stylex.props(styles.card)}>\n    //     <span>Blue rectangle</span>\n    //   </div>\n    //   <div {...stylex.props(isLightTheme ? lightTheme : darkTheme, st.test1)}>Test1</div>\n    //   <button onClick={() => setIsLightTheme(prev => !prev)}>Test</button>\n    //   <div {...stylex.props(autoTheme, st.test1)}>Test2</div>\n    //   <div {...stylex.props(autoTheme, st.test1)}>{`calc => ${calc(10, 20)}`}</div>\n    //   <div {...stylex.props(autoTheme, st.test1)}>{helloworld} {demo.foo(20)}</div>\n    // </div>\n    <ErrorBoundary>\n      <Router>\n        {/* <Route path=\"/\" component={Home} /> */}\n        <Home path=\"/\" />\n        <About path=\"/about\" />\n      </Router>\n    </ErrorBoundary>\n  );\n}\nrender(<App />, document.getElementById(\"app\")!);", "import { h, createContext, cloneElement, toChildArray } from 'preact';\nimport { useContext, useMemo, useReducer, useLayoutEffect, useRef } from 'preact/hooks';\n\nlet push;\nconst UPDATE = (state, url) => {\n\tpush = undefined;\n\tif (url && url.type === 'click') {\n\t\t// ignore events the browser takes care of already:\n\t\tif (url.ctrlKey || url.metaKey || url.altKey || url.shiftKey || url.button !== 0) {\n\t\t\treturn state;\n\t\t}\n\n\t\tconst link = url.target.closest('a[href]');\n\t\tif (\n\t\t\t!link ||\n\t\t\tlink.origin != location.origin ||\n\t\t\t/^#/.test(link.getAttribute('href')) ||\n\t\t\t!/^(_?self)?$/i.test(link.target)\n\t\t) {\n\t\t\treturn state;\n\t\t}\n\n\t\tpush = true;\n\t\turl.preventDefault();\n\t\turl = link.href.replace(location.origin, '');\n\t} else if (typeof url === 'string') {\n\t\tpush = true;\n\t} else if (url && url.url) {\n\t\tpush = !url.replace;\n\t\turl = url.url;\n\t} else {\n\t\turl = location.pathname + location.search;\n\t}\n\n\tif (push === true) history.pushState(null, '', url);\n\telse if (push === false) history.replaceState(null, '', url);\n\treturn url;\n};\n\nexport const exec = (url, route, matches) => {\n\turl = url.split('/').filter(Boolean);\n\troute = (route || '').split('/').filter(Boolean);\n\tfor (let i = 0, val, rest; i < Math.max(url.length, route.length); i++) {\n\t\tlet [, m, param, flag] = (route[i] || '').match(/^(:?)(.*?)([+*?]?)$/);\n\t\tval = url[i];\n\t\t// segment match:\n\t\tif (!m && param == val) continue;\n\t\t// /foo/* match\n\t\tif (!m && val && flag == '*') {\n\t\t\tmatches.rest = '/' + url.slice(i).map(decodeURIComponent).join('/');\n\t\t\tbreak;\n\t\t}\n\t\t// segment mismatch / missing required field:\n\t\tif (!m || (!val && flag != '?' && flag != '*')) return;\n\t\trest = flag == '+' || flag == '*';\n\t\t// rest (+/*) match:\n\t\tif (rest) val = url.slice(i).map(decodeURIComponent).join('/');\n\t\t// normal/optional field:\n\t\telse if (val) val = decodeURIComponent(val);\n\t\tmatches.params[param] = val;\n\t\tif (!(param in matches)) matches[param] = val;\n\t\tif (rest) break;\n\t}\n\treturn matches;\n};\n\nexport function LocationProvider(props) {\n\tconst [url, route] = useReducer(UPDATE, props.url || location.pathname + location.search);\n\tconst wasPush = push === true;\n\n\tconst value = useMemo(() => {\n\t\tconst u = new URL(url, location.origin);\n\t\tconst path = u.pathname.replace(/(.)\\/$/g, '$1');\n\t\t// @ts-ignore-next\n\t\treturn {\n\t\t\turl,\n\t\t\tpath,\n\t\t\tquery: Object.fromEntries(u.searchParams),\n\t\t\troute: (url, replace) => route({ url, replace }),\n\t\t\twasPush\n\t\t};\n\t}, [url]);\n\n\tuseLayoutEffect(() => {\n\t\taddEventListener('click', route);\n\t\taddEventListener('popstate', route);\n\n\t\treturn () => {\n\t\t\tremoveEventListener('click', route);\n\t\t\tremoveEventListener('popstate', route);\n\t\t};\n\t}, []);\n\n\t// @ts-ignore\n\treturn h(LocationProvider.ctx.Provider, { value }, props.children);\n}\n\nconst RESOLVED = Promise.resolve();\nexport function Router(props) {\n\tconst [c, update] = useReducer(c => c + 1, 0);\n\n\tconst { url, query, wasPush, path } = useLocation();\n\tconst { rest = path, params = {} } = useContext(RouteContext);\n\n\tconst isLoading = useRef(false);\n\tconst prevRoute = useRef(path);\n\t// Monotonic counter used to check if an un-suspending route is still the current route:\n\tconst count = useRef(0);\n\t// The current route:\n\tconst cur = useRef();\n\t// Previous route (if current route is suspended):\n\tconst prev = useRef();\n\t// A not-yet-hydrated DOM root to remove once we commit:\n\tconst pendingBase = useRef();\n\t// has this component ever successfully rendered without suspending:\n\tconst hasEverCommitted = useRef(false);\n\t// was the most recent render successful (did not suspend):\n\tconst didSuspend = useRef();\n\tdidSuspend.current = false;\n\n\tcur.current = useMemo(() => {\n\t\t// This hack prevents Preact from diffing when we swap `cur` to `prev`:\n\t\tif (this.__v && this.__v.__k) this.__v.__k.reverse();\n\n\t\tcount.current++;\n\n\t\tprev.current = cur.current;\n\n\t\tlet p, d, m;\n\t\ttoChildArray(props.children).some(vnode => {\n\t\t\tconst matches = exec(rest, vnode.props.path, (m = { path: rest, query, params, rest: '' }));\n\t\t\tif (matches) return (p = cloneElement(vnode, m));\n\t\t\tif (vnode.props.default) d = cloneElement(vnode, m);\n\t\t});\n\n\t\treturn h(RouteContext.Provider, { value: m }, p || d);\n\t}, [url]);\n\n\t// Reset previous children - if rendering succeeds synchronously, we shouldn't render the previous children.\n\tconst p = prev.current;\n\tprev.current = null;\n\n\t// This borrows the _childDidSuspend() solution from compat.\n\tthis.__c = e => {\n\t\t// Mark the current render as having suspended:\n\t\tdidSuspend.current = true;\n\n\t\t// The new route suspended, so keep the previous route around while it loads:\n\t\tprev.current = p;\n\n\t\t// Fire an event saying we're waiting for the route:\n\t\tif (props.onLoadStart) props.onLoadStart(url);\n\t\tisLoading.current = true;\n\n\t\t// Re-render on unsuspend:\n\t\tlet c = count.current;\n\t\te.then(() => {\n\t\t\t// Ignore this update if it isn't the most recently suspended update:\n\t\t\tif (c !== count.current) return;\n\n\t\t\t// Successful route transition: un-suspend after a tick and stop rendering the old route:\n\t\t\tprev.current = null;\n\t\t\tRESOLVED.then(update);\n\t\t});\n\t};\n\n\tuseLayoutEffect(() => {\n\t\tconst currentDom = this.__v && this.__v.__e;\n\n\t\t// Ignore suspended renders (failed commits):\n\t\tif (didSuspend.current) {\n\t\t\t// If we've never committed, mark any hydration DOM for removal on the next commit:\n\t\t\tif (!hasEverCommitted.current && !pendingBase.current) {\n\t\t\t\tpendingBase.current = currentDom;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If this is the first ever successful commit and we didn't use the hydration DOM, remove it:\n\t\tif (!hasEverCommitted.current && pendingBase.current) {\n\t\t\tif (pendingBase.current !== currentDom) pendingBase.current.remove();\n\t\t\tpendingBase.current = null;\n\t\t}\n\n\t\t// Mark the component has having committed:\n\t\thasEverCommitted.current = true;\n\n\t\t// The route is loaded and rendered.\n\t\tif (prevRoute.current !== path) {\n\t\t\tif (wasPush) scrollTo(0, 0);\n\t\t\tif (props.onLoadEnd && isLoading.current) props.onLoadEnd(url);\n\t\t\tif (props.onRouteChange) props.onRouteChange(url);\n\n\t\t\tisLoading.current = false;\n\t\t\tprevRoute.current = path;\n\t\t}\n\t}, [path, wasPush, c]);\n\n\t// Note: curChildren MUST render first in order to set didSuspend & prev.\n\treturn [h(RenderRef, { r: cur }), h(RenderRef, { r: prev })];\n}\n\n// Lazily render a ref's current value:\nconst RenderRef = ({ r }) => r.current;\n\nRouter.Provider = LocationProvider;\n\n/** @typedef {{ url: string, path: string, query: object, route, wasPush: boolean }} RouteInfo */\n\nLocationProvider.ctx = createContext(/** @type {RouteInfo} */ ({}));\nconst RouteContext = createContext({});\n\nexport const Route = props => h(props.component, props);\n\nexport const useLocation = () => useContext(LocationProvider.ctx);\nexport const useRoute = () => useContext(RouteContext);\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "import { h, options } from 'preact';\nimport { useState, useRef } from 'preact/hooks';\n\nexport default function lazy(load) {\n\tlet p, c;\n\treturn props => {\n\t\tconst [, update] = useState(0);\n\t\tconst r = useRef(c);\n\t\tif (!p) p = load().then(m => (c = (m && m.default) || m));\n\t\tif (c !== undefined) return h(c, props);\n\t\tif (!r.current) r.current = p.then(() => update(1));\n\t\tthrow p;\n\t};\n}\n\n// See https://github.com/preactjs/preact/blob/88680e91ec0d5fc29d38554a3e122b10824636b6/compat/src/suspense.js#L5\nconst oldCatchError = options.__e;\noptions.__e = (err, newVNode, oldVNode) => {\n\tif (err && err.then) {\n\t\tlet v = newVNode;\n\t\twhile ((v = v.__)) {\n\t\t\tif (v.__c && v.__c.__c) {\n\t\t\t\tif (newVNode.__e == null) {\n\t\t\t\t\tnewVNode.__e = oldVNode.__e; // ._dom\n\t\t\t\t\tnewVNode.__k = oldVNode.__k; // ._children\n\t\t\t\t}\n\t\t\t\tif (!newVNode.__k) newVNode.__k = [];\n\t\t\t\treturn v.__c.__c(err, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\tif (oldCatchError) oldCatchError(err, newVNode, oldVNode);\n};\n\nexport function ErrorBoundary(props) {\n\tthis.__c = childDidSuspend;\n\tthis.componentDidCatch = props.onError;\n\treturn props.children;\n}\n\nfunction childDidSuspend(err) {\n\terr.then(() => this.forceUpdate());\n}\n", "import { render, hydrate as hydrativeRender } from 'preact';\n\nlet initialized;\n\n/** @type {typeof render} */\nexport default function hydrate(jsx, parent) {\n\tif (typeof window === 'undefined') return;\n\tlet isodata = document.querySelector('script[type=isodata]');\n\t// @ts-ignore-next\n\tparent = parent || (isodata && isodata.parentNode) || document.body;\n\tif (!initialized && isodata) {\n\t\thydrativeRender(jsx, parent);\n\t} else {\n\t\trender(jsx, parent);\n\t}\n\tinitialized = true;\n}\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "options", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "debounceRendering", "defer", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "parentDom", "commitQueue", "refQueue", "sort", "depthSort", "shift", "__P", "diff", "__n", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "String", "isArray", "findMatchingIndex", "unmount", "parentVNode", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "_attached", "Date", "now", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "provider", "componentContext", "renderHook", "count", "newType", "outer", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "__r", "getChildContext", "getSnapshotBeforeUpdate", "MODE_HYDRATE", "indexOf", "diffElementNodes", "diffed", "root", "cb", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "attributes", "__html", "innerHTML", "current", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "Array", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "undefined", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "setTimeout", "a", "b", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "defaultProps", "options", "isArray", "Array", "u", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useLayoutEffect", "callback", "args", "state", "getHookState", "currentIndex", "options", "__s", "argsChanged", "__", "_pendingArgs", "currentComponent", "__h", "push", "useRef", "initialValue", "currentHook", "useMemo", "current", "useMemo", "factory", "args", "state", "getHookState", "currentIndex", "argsChanged", "__H", "__V", "_pendingArgs", "__h", "__", "useContext", "context", "provider", "currentComponent", "__c", "state", "getHookState", "currentIndex", "c", "__", "sub", "props", "value", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "parentDom", "__k", "__m", "oldRoot", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "__", "hookItem", "__N", "__V", "EMPTY", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "invokeOrReturn", "f", "i", "m", "y", "u", "url", "A", "c", "P", "F", "p", "d", "e", "r", "P", "p", "c", "r", "F", "m", "v", "u", "About", "p"]
}
